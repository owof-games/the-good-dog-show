name: (single-build-and-upload)

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      version:
        required: false
        type: string
      tags:
        required: true
        type: string
      name:
        required: true
        type: string
      targetPlatform:
        required: true
        type: string
      timeout:
        required: true
        type: number
      buildContinueOnError:
        required: false
        type: boolean
        default: false
      channel:
        required: true
        type: string
      fix_permissions:
        required: false
        type: boolean
        default: false
      development:
        required: true
        type: boolean
        default: false
    secrets:
      BUTLER_CREDENTIALS:
        required: true
      UNITY_LICENSE:
        required: true
      UNITY_EMAIL:
        required: true
      UNITY_PASSWORD:
        required: true
jobs:
  build:
    runs-on: ${{ fromJson(inputs.tags) }}
    name: Build for ${{ inputs.name }}
    steps:
      # see https://github.com/actions/checkout/issues/211, and in particular
      # https://github.com/actions/checkout/issues/211#issuecomment-611986243
      # and
      # https://github.com/actions/checkout/issues/211#issuecomment-1463921672
      # This also contains info about running self-hosted docker as non-root:
      # https://github.com/actions/runner/issues/434
      - name: Fix permissions
        if: ${{ inputs.fix_permissions }}
        shell: sh
        run: echo "user is $USER and workspace is $GITHUB_WORKSPACE and curr dir is $(pwd)" && sudo chown -R $USER:$USER $GITHUB_WORKSPACE/../..

      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v3

      # Git LFS
      - name: Create LFS file list
        shell: sh {0}
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        shell: sh {0}
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        id: build
        timeout-minutes: ${{ inputs.timeout }}
        continue-on-error: ${{ inputs.buildContinueOnError }}
        # use fixed docker windows usage, as per https://discord.com/channels/710946343828455455/1156880998122913872/1157680471451381831
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ inputs.targetPlatform }}
          customParameters: ${{ inputs.development && '-Development' || '' }}
          # use the custom win installation with vc redist included only if using windows, otherwise the default image is good
          # customImage: ${{ inputs.targetPlatform == 'StandaloneWindows' && 'redglow/editor:windows-2022.3.10f1-windows-il2cpp-3-vstoolsworkload' || '' }}
          # customImage: ${{ inputs.targetPlatform == 'StandaloneWindows' && 'unityci/editor:ubuntu-2022.3.10f1-windows-mono-3.0.1' || '' }}
      
      # Save as artifact
      - name: Upload build as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.targetPlatform }}
          path: ${{ inputs.targetPlatform == 'WebGL' && 'build/WebGL/WebGL' || 'build' }}

      - name: Fix permissions (again)
        if: ${{ inputs.fix_permissions }}
        shell: sh
        run: echo "user is $USER and workspace is $GITHUB_WORKSPACE and curr dir is $(pwd)" && sudo chown -R $USER:$USER $GITHUB_WORKSPACE/../..
  upload:
    runs-on: ['self-hosted', 'Linux']
    name: Upload for ${{ inputs.name }}
    needs: build
    steps:
    # this could get stuck for a LONG time
    # maybe related to https://github.com/actions/upload-artifact/issues/270
    - name: Download build
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.targetPlatform }}
        path: ${{ inputs.targetPlatform }}
    - name: Upload build to itch.io
      uses: manleydev/butler-publish-itchio-action@master
      env:
        BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
        CHANNEL: ${{ inputs.channel }}
        ITCH_GAME: ${{ inputs.project_name }}
        ITCH_USER: ${{ vars.ITCH_USER }}
        PACKAGE: ${{ inputs.targetPlatform }}
        VERSION: ${{ inputs.version }}
